#
# ***************************************************************************
# Copyright (c) 2010 Qcadoo Limited
# Project: Qcadoo MES
# Version: 1.4
#
# This file is part of Qcadoo.
#
# Qcadoo is free software; you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation; either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# ***************************************************************************
#

### MENU

orders.menu.orders = 计划
orders.menu.orders.description = 特定产品生产订单

orders.menu.orders.productionOrders = 生产订单
orders.menu.orders.productionOrdersPlanning = 订单计划

orders.menu.ordersTracking = 跟踪
orders.menu.ordersTracking.description = 描述

orders.menu.orders.schedulesList = Plan for workstation and employee
orders.menu.orders.operationalTasks = 工序任务

orders.menu.parameters.planningParameters = Planning parameters


### MODEL

orders.order.number.label = 编号
orders.order.name.label = 名称
orders.order.name.default = 订单 {0} ({1}) - {2} - {3}
orders.order.name.defaultFromProduct = 订单 {0} ({1}) - {2}
orders.order.state.label = 状态

orders.order.state.value.01pending = 待定
orders.order.state.value.02accepted = 已批准
orders.order.state.value.03inProgress = 进行中
orders.order.state.value.04completed = 已完成
orders.order.state.value.05declined = 已拒绝
orders.order.state.value.06interrupted = 已暂停
orders.order.state.value.07abandoned = 已放弃

orders.orderPlanningListDto.state.label = 状态
orders.orderPlanningListDto.state.value.01pending = 待定
orders.orderPlanningListDto.state.value.02accepted = 已批准
orders.orderPlanningListDto.state.value.03inProgress = 进行中
orders.orderPlanningListDto.state.value.04completed = 已完成
orders.orderPlanningListDto.state.value.05declined = 已拒绝
orders.orderPlanningListDto.state.value.06interrupted = 已暂停
orders.orderPlanningListDto.state.value.07abandoned = 已放弃
orders.orderPlanningListDto.company.label = Company

orders.orderListDto.state.label = 状态
orders.orderListDto.state.value.01pending = 待定
orders.orderListDto.state.value.02accepted = 已批准
orders.orderListDto.state.value.03inProgress = 进行中
orders.orderListDto.state.value.04completed = 已完成
orders.orderListDto.state.value.05declined = 已拒绝
orders.orderListDto.state.value.06interrupted = 已暂停
orders.orderListDto.state.value.07abandoned = 已放弃
orders.orderListDto.orderCategory.label = Category
orders.orderListDto.plannedQuantityForAdditionalUnit.label=Plan. qty. in add. unit
orders.orderListDto.unitForAdditionalUnit.label= Add. unit

orders.order.dateFrom.label = 计划开始日期
orders.order.dateTo.label = 计划完成日期
orders.order.product.label = 产品
orders.order.product.label.focus = 产品
orders.order.company.label = 客户
orders.order.company.label.focus = 输入客户编号
orders.order.plannedQuantity.label = 计划数量
orders.order.doneQuantity.label = 完成数量
orders.order.effectiveDateFrom.label = 实际日期始于
orders.order.effectiveDateTo.label = 实际日期终于
orders.order.startWorker.label = 选择工人
orders.order.endWorker.label = 末道工人
orders.order.technology.label = 选择工艺
orders.order.technology.label.focus = 输入工艺编号
orders.order.defaultTechnology.label = 默认工艺
orders.order.description.label = 描述
orders.order.deadline.label = 截止日期
orders.order.productionLine.label = 生产线
orders.order.productionLine.label.focus = 选择生产线
orders.order.startDate.label = 开始
orders.order.finishDate.label = 结束
orders.order.datesChanged.label = 日期变更
orders.order.recipe.label =
orders.order.orderCategory.label  = 订单类型
orders.order.plannedQuantityForAdditionalUnit.label = 计划数量（附加单位）

orders.orderStateChange.sourceState.value.01pending = 待定
orders.orderStateChange.sourceState.value.02accepted = 已批准
orders.orderStateChange.sourceState.value.03inProgress = 进行中
orders.orderStateChange.sourceState.value.04completed = 已完成
orders.orderStateChange.sourceState.value.05declined = 已拒绝
orders.orderStateChange.sourceState.value.06interrupted = 已暂停
orders.orderStateChange.sourceState.value.07abandoned = 已放弃

orders.orderStateChange.targetState.value.01pending = 待定
orders.orderStateChange.targetState.value.02accepted = 已批准
orders.orderStateChange.targetState.value.03inProgress = 进行中
orders.orderStateChange.targetState.value.04completed = 已完成
orders.orderStateChange.targetState.value.05declined = 已拒绝
orders.orderStateChange.targetState.value.06interrupted = 已暂停
orders.orderStateChange.targetState.value.07abandoned = 已放弃

orders.orderStateChange.dateAndTime.label = 日期 & 时间
orders.orderStateChange.sourceState.label = 之前的状态
orders.orderStateChange.targetState.label = 当前状态
orders.orderStateChange.worker.label = 工人
orders.orderStateChange.shift.label = 班次
orders.orderStateChange.reasonType.label = 原因类型
orders.orderStateChange.comment.label = 内容
orders.orderStateChange.additionalInformation.label = 附加信息
orders.orderStateChange.reasonRequired.label = .

orders.orderStateChange.sourceCorrectedDateFrom.label = 上次校正的开始日期
orders.orderStateChange.sourceCorrectedDateTo.label = 上次校正的结束日期
orders.orderStateChange.sourceStartDate.label = 上次开始日期
orders.orderStateChange.sourceFinishDate.label = 上次结束日期
orders.orderStateChange.targetCorrectedDateFrom.label = 当前校正的结束日期
orders.orderStateChange.targetCorrectedDateTo.label = 当前校正的结束日期
orders.orderStateChange.targetStartDate.label = 当前开始日期
orders.orderStateChange.targetFinishDate.label = 当前结束日期
orders.orderStateChange.datesChanged.label = 日期已更改

orders.reasonTypeCorrectionDateFrom.reasonTypeOfChangingOrderState.label = 类型
orders.reasonTypeCorrectionDateTo.reasonTypeOfChangingOrderState.label = 类型
orders.reasonTypeOfChangingOrderState.reasonTypeOfChangingOrderState.label = 类型

orders.order.orderType.value.01withPatternTechnology = 工艺 —— 一种模板
orders.order.orderType.value.02withOwnTechnology = 自带工艺

orders.recipe.number.label = 编号
orders.recipe.name.label = 名称
orders.recipe.product.label = 产品
orders.recipe.version.label = 版本
orders.recipe.isDefault.label = 默认
orders.recipe.status.label = 状态
orders.recipe.status.value.01active = 已激活
orders.recipe.status.value.02nonactive = 稳定
orders.recipe.workstationType.label = 装备

orders.mbrStateChange.sourceState.value.01draft = 草稿
orders.mbrStateChange.sourceState.value.02inReview = 草稿
orders.mbrStateChange.sourceState.value.03accepted = 已批准
orders.mbrStateChange.sourceState.value.04cancelled = 已取消

orders.mbrStateChange.targetState.value.01draft = 草稿
orders.mbrStateChange.targetState.value.02inReview = 审核中
orders.mbrStateChange.targetState.value.03accepted = 已批准
orders.mbrStateChange.targetState.value.04cancelled = 已取消

orders.recipe.state.value.01draft = 草稿
orders.recipe.state.value.02inReview = 审核中
orders.recipe.state.value.03accepted = 已批准
orders.recipe.state.value.04cancelled = 已取消

orders.materialForInstruction.material.label = 资源
orders.materialForInstruction.material.label.focus = 从MBR中选择资源
orders.materialForInstruction.product.label = 产品
orders.materialForInstruction.product.label.focus = 选择产品
orders.materialForInstruction.instruction.label = 工序
orders.materialForInstruction.quantity.label = 数量

orders.formula.prefix.label = 前缀
orders.formula.suffix.label = 后缀
orders.formula.prefix.value.01leftBracket = (
orders.formula.suffix.value.01rightBracket = )

orders.orderCategory.dictionary = 订单类型

orders.orderCategoryColor.parameter.label = 参数
orders.orderCategoryColor.orderCategory.label = 订单类型
orders.orderCategoryColor.color.label = 颜色

orders.schedule.number.label = Number
orders.schedule.name.label = Name 
orders.schedule.state.label = State
orders.schedule.state.value.01draft = Draft
orders.schedule.state.value.02approved = Approved
orders.schedule.state.value.03rejected = Rejected
orders.schedule.startTime.label = Starting the plan
orders.schedule.sortOrder.label = Sort order
orders.schedule.sortOrder.value.01desc = descending - from the longest to the shortest operation
orders.schedule.sortOrder.value.02asc = ascending - from the shortest to the longest operation
orders.schedule.workstationAssignCriterion.label = Criterion for the evaluation of the station assignment
orders.schedule.workstationAssignCriterion.value.01shortestTime = the shortest duration of work on the workstation
orders.schedule.workstationAssignCriterion.value.02leastWorkstations = least working stations
orders.schedule.workerAssignCriterion.label = Criterion for assessing employee assignment
orders.schedule.workerAssignCriterion.value.01workstationLastOperatorLatestFinished = an employee performing a previous operation at the station or one that finished the previous task at the latest
orders.schedule.workerAssignCriterion.value.02workstationLastOperatorEarliestFinished = an employee performing a previous operation at the station or one who finished the previous task at the earliest
orders.schedule.workerAssignCriterion.value.03workstationDefaultOperator = default employee for the station
orders.schedule.approveTime.label = Approval date

orders.schedulePosition.additionalTime.label = Additional time
orders.schedulePosition.laborWorkTime.label = Labor work time
orders.schedulePosition.machineWorkTime.label = Machine work time
orders.schedulePosition.startTime.label = Beginning
orders.schedulePosition.endTime.label = Ending
orders.schedulePosition.quantity.label = Quantity
orders.schedulePosition.workstation.label = Workstation
orders.schedulePosition.workstation.label.focus = Choose a workstation
orders.schedulePosition.staff.label = Worker
orders.schedulePosition.staff.label.focus = Choose a worker

orders.scheduleStateChange.dateAndTime.label = Date
orders.scheduleStateChange.sourceState.label = Previous status
orders.scheduleStateChange.targetState.label = Status
orders.scheduleStateChange.worker.label = Done by
orders.scheduleStateChange.shift.label = Shift

orders.scheduleStateChange.targetState.value.01draft = Draft
orders.scheduleStateChange.targetState.value.02approved = Approved
orders.scheduleStateChange.targetState.value.03rejected = Rejected

orders.scheduleStateChange.sourceState.value.01draft = Draft
orders.scheduleStateChange.sourceState.value.02approved = Approved
orders.scheduleStateChange.sourceState.value.03rejected = Rejected

orders.operationalTask.number.label = 编号
orders.operationalTask.name.label  = 名称
orders.operationalTask.description.label = 描述
orders.operationalTask.type.label = 类型
orders.operationalTask.type.value.01otherCase = 其他任务
orders.operationalTask.type.value.02executionOperationInOrder = execution operation in order
orders.operationalTask.startDate.label = 开始日期
orders.operationalTask.finishDate.label  = 结束日期
orders.operationalTask.staff.label =
orders.operationalTask.staff.label.focus =
orders.operationalTask.productionLine.label = 生产线
orders.operationalTask.productionLine.label.focus = 选择生产线
orders.operationalTask.workstation.label =
orders.operationalTask.workstation.label.focus =

orders.operationalTask.order.label = Order
orders.operationalTask.order.label.focus = Select order
orders.operationalTask.technologyOperationComponent.label = Operation in tree
orders.operationalTask.technologyOperationComponent.label.focus = Select operation
orders.operationalTask.product.label = Product
orders.operationalTask.product.label.focus = Select product
orders.operationalTask.plannedQuantity.label = Planned quantity
orders.operationalTask.usedQuantity.label = Used quantity

orders.operationalTask.state.value.01pending = Pending
orders.operationalTask.state.value.02started = Started
orders.operationalTask.state.value.03finished = Finished
orders.operationalTask.state.value.04rejected = Rejected

orders.operationalTaskStateChange.sourceState.value.01pending = Pending
orders.operationalTaskStateChange.sourceState.value.02started = Started
orders.operationalTaskStateChange.sourceState.value.03finished = Finished
orders.operationalTaskStateChange.sourceState.value.04rejected = Rejected
orders.operationalTaskStateChange.targetState.value.01pending = Pending
orders.operationalTaskStateChange.targetState.value.02started = Started
orders.operationalTaskStateChange.targetState.value.03finished = Finished
orders.operationalTaskStateChange.targetState.value.04rejected = Rejected

orders.operationalTaskDto.number.label = 编号
orders.operationalTaskDto.name.label  = 名称
orders.operationalTaskDto.description.label = 描述
orders.operationalTaskDto.type.label = 类型
orders.operationalTaskDto.type.value.01otherCase = 其他任务
orders.operationalTaskDto.type.value.02executionOperationInOrder = execution operation in order
orders.operationalTaskDto.startDate.label = 开始日期
orders.operationalTaskDto.finishDate.label  = 结束日期
orders.operationalTaskDto.staffName.label = Worker
orders.operationalTaskDto.workstationNumber.label = Workstation
orders.operationalTaskDto.orderNumber.label = Order number
orders.operationalTaskDto.technologyOperationComponentNodeNumber.label = Level
orders.operationalTaskDto.productNumber.label = Product number
orders.operationalTaskDto.productName.label = Product name
orders.operationalTaskDto.productUnit.label = Product unit
orders.operationalTaskDto.plannedQuantity.label = Planned quantity
orders.operationalTaskDto.usedQuantity.label = Used quantity
orders.operationalTaskDto.doneInPercentage.label = Done [%]
orders.operationalTaskDto.remainingQuantity.label = Remaining quantity
orders.operationalTaskDto.state.label = Status
orders.operationalTaskDto.state.value.01pending = Pending
orders.operationalTaskDto.state.value.02started = Started
orders.operationalTaskDto.state.value.03finished = Finished
orders.operationalTaskDto.state.value.04rejected = Rejected

orders.operationalTaskWithColorDto.number.label = 编号
orders.operationalTaskWithColorDto.name.label  = 名称
orders.operationalTaskWithColorDto.description.label = 描述
orders.operationalTaskWithColorDto.type.label = 类型
orders.operationalTaskWithColorDto.type.value.01otherCase = 其他任务
orders.operationalTaskWithColorDto.type.value.02executionOperationInOrder = execution operation in order
orders.operationalTaskWithColorDto.startDate.label = 开始日期
orders.operationalTaskWithColorDto.finishDate.label  = 结束日期
orders.operationalTaskWithColorDto.staffName.label = Worker
orders.operationalTaskWithColorDto.productionLineNumber.label = Production line
orders.operationalTaskWithColorDto.workstationNumber.label = Workstation
orders.operationalTaskWithColorDto.orderNumber.label = Order number
orders.operationalTaskWithColorDto.technologyOperationComponentNodeNumber.label = Level
orders.operationalTaskWithColorDto.productNumber.label = Product number
orders.operationalTaskWithColorDto.productName.label = Product name
orders.operationalTaskWithColorDto.productUnit.label = Product unit
orders.operationalTaskWithColorDto.plannedQuantity.label = Planned quantity
orders.operationalTaskWithColorDto.usedQuantity.label = Used quantity
orders.operationalTaskWithColorDto.doneInPercentage.label = Done [%]
orders.operationalTaskWithColorDto.remainingQuantity.label = Remaining quantity
orders.operationalTaskWithColorDto.state.label = Status
orders.operationalTaskWithColorDto.state.value.01pending = Pending
orders.operationalTaskWithColorDto.state.value.02started = Started
orders.operationalTaskWithColorDto.state.value.03finished = Finished
orders.operationalTaskWithColorDto.state.value.04rejected = Rejected


### VIEW

orders.ordersPlanningList.window.ribbon.orderListActions = 操作
orders.ordersPlanningList.window.ribbon.orderListActions.new = 新增
orders.ordersPlanningList.window.ribbon.orderListActions.copy = 复制
orders.ordersPlanningList.window.ribbon.orderListActions.delete = 删除
orders.ordersPlanningList.window.ribbon.orderListActions.refresh = 刷新
orders.ordersPlanningList.window.ribbon.status.acceptOrder = 批准
orders.ordersPlanningList.window.ribbon.status.acceptOrder.confirm = 是否批准订单?
orders.ordersPlanningList.window.ribbon.status.activateOrder = 开始
orders.ordersPlanningList.window.ribbon.status.activateOrder.confirm = 是否开始订单?
orders.ordersPlanningList.window.ribbon.status.finishOrder = 结束
orders.ordersPlanningList.window.ribbon.status.finishOrder.confirm = 是否结束订单?
orders.ordersPlanningList.window.ribbon.status.restartOrder = 重新开始
orders.ordersPlanningList.window.ribbon.status.restartOrder.confirm = 是否重新开始订单?
orders.ordersPlanningList.window.ribbon.status.declineOrder = 拒绝
orders.ordersPlanningList.window.ribbon.status.declineOrder.confirm = 是否拒绝开始订单?
orders.ordersPlanningList.window.ribbon.status.abandonOrder = 放弃
orders.ordersPlanningList.window.ribbon.status.abandonOrder.confirm = 是否放弃订单?
orders.ordersPlanningList.window.ribbon.status.interruptOrder = 暂停
orders.ordersPlanningList.window.ribbon.status.interruptOrder.confirm = 是否暂停订单?
orders.ordersPlanningList.window.ribbon.status = 状态
orders.ordersPlanningList.window.ribbon.exportPlan.pdfProduct = 产品清单(PDF)
orders.ordersPlanningList.window.ribbon.exportPlan.pdfWorker = 员工清单(PDF)
orders.ordersPlanningList.window.ribbon.exportPlan.pdfMachine =设备清单(PDF)
orders.ordersPlanningList.window.ribbon.exportPlan.pdfProduct.xlsProduct = 产品清单(XLS)
orders.ordersPlanningList.window.ribbon.exportPlan.pdfMachine.xlsMachine = 设备清单(XLS)
orders.ordersPlanningList.window.ribbon.exportPlan = 工作指令来自.
orders.ordersPlanningList.window.ribbon.exportPlan.xlsWorker = 员工清单(XLS)

orders.ordersPlanningList.window.ribbon.import = Import
orders.ordersPlanningList.window.ribbon.import.openOrdersImportPage = Import orders<br/>from XLSX
orders.ordersPlanningList.window.ribbon.import.openOrdersImportPage.description = The function creates orders based on the Excel sheet. Check in the Orders documentation what conditions must be met by the file to be imported.

orders.ordersPlanningList.window.mainTab.orders.header = 生产订单:

orders.ordersPlanningList.window.mainTab.orders.filter.new = 新增
orders.ordersPlanningList.window.mainTab.orders.filter.accepted = 已批准
orders.ordersPlanningList.window.mainTab.orders.filter.inProgress = 已开始
orders.ordersPlanningList.window.mainTab.orders.filter.overdueAccepted = 已批准超期
orders.ordersPlanningList.window.mainTab.orders.filter.overdueInProgress = 超期进行中
orders.ordersPlanningList.window.mainTab.orders.filter.startingToday = 今天开始
orders.ordersPlanningList.window.mainTab.orders.filter.startingTomorrow = 下个工作日开始

orders.ordersPlanningList.window.mainTab.orders.column.number = 编号
orders.ordersPlanningList.window.mainTab.orders.column.name = 名称
orders.ordersPlanningList.window.mainTab.orders.column.description = 描述
orders.ordersPlanningList.window.mainTab.orders.column.state = 状态
orders.ordersPlanningList.window.mainTab.orders.column.productNumber = 产品编号
orders.ordersPlanningList.window.mainTab.orders.column.technologyNumber = 工艺编号
orders.ordersPlanningList.window.mainTab.orders.column.dateFrom = 计划开始日期
orders.ordersPlanningList.window.mainTab.orders.column.dateTo = 计划结束日期
orders.ordersPlanningList.window.mainTab.orders.column.plannedQuantity = 计划数量
orders.ordersPlanningList.window.mainTab.orders.column.unit = 单位
orders.ordersPlanningList.window.mainTab.orders.column.productionLine = 生产线
orders.ordersPlanningList.window.mainTab.orders.column.productionLineNumber = 生产线
orders.ordersPlanningList.window.mainTab.orders.column.productionLinePlace = 位置
orders.ordersPlanningList.window.mainTab.orders.column.orderCategory = 类型
orders.ordersPlanningList.window.mainTab.orders.column.amountOfProductProduced = 完成数量
orders.ordersPlanningList.window.mainTab.orders.column.wastesQuantity = 报废数量
orders.ordersPlanningList.window.mainTab.orders.column.remainingAmountOfProductToProduce = 剩余数量
orders.ordersPlanningList.window.mainTab.orders.column.plannedQuantityForAdditionalUnit = 计划数量 (附加单位）
orders.ordersPlanningList.window.mainTab.orders.column.unitForAdditionalUnit = 附加单位
orders.ordersPlanningList.window.mainTab.orders.column.doneInPercentage = Done [%]

orders.orderDetails.window.productQuantityTab.doneInPercentage.label = Done

orders.ordersList.window.ribbon.orderListActions = 操作
orders.ordersList.window.ribbon.orderListActions.new = 新增
orders.ordersList.window.ribbon.orderListActions.copy = 复制
orders.ordersList.window.ribbon.orderListActions.delete = 删除
orders.ordersList.window.ribbon.orderListActions.refresh = 刷新
orders.ordersList.window.ribbon.status.acceptOrder = 批准
orders.ordersList.window.ribbon.status.acceptOrder.confirm = 是否批准订单?
orders.ordersList.window.ribbon.status.activateOrder = 开始
orders.ordersList.window.ribbon.status.activateOrder.confirm = 是否开始订单?
orders.ordersList.window.ribbon.status.finishOrder = 结束
orders.ordersList.window.ribbon.status.finishOrder.confirm = 是否结束订单?
orders.ordersList.window.ribbon.status.restartOrder = 重新开始
orders.ordersList.window.ribbon.status.restartOrder.confirm = 是否重新开始订单?
orders.ordersList.window.ribbon.status.declineOrder = 拒绝
orders.ordersList.window.ribbon.status.declineOrder.confirm = 是否拒绝开始订单?
orders.ordersList.window.ribbon.status.abandonOrder = 放弃
orders.ordersList.window.ribbon.status.abandonOrder.confirm = 是否放弃订单?
orders.ordersList.window.ribbon.status.interruptOrder = 暂停
orders.ordersList.window.ribbon.status.interruptOrder.confirm = 是否暂停订单?
orders.ordersList.window.ribbon.status = 状态

orders.ordersList.window.mainTab.orders.header = 生产订单:

orders.ordersList.window.mainTab.orders.column.number = 编号
orders.ordersList.window.mainTab.orders.column.name = 名称
orders.ordersList.window.mainTab.orders.column.deadline = 截止日期
orders.ordersList.window.mainTab.orders.column.productNumber = 产品编号
orders.ordersList.window.mainTab.orders.column.productName = 产品名称
orders.ordersList.window.mainTab.orders.column.plannedQuantity = 计划数量
orders.ordersList.window.mainTab.orders.column.unit = 单位
orders.ordersList.window.mainTab.orders.column.companyName = 客户
orders.ordersList.window.mainTab.orders.column.divisionName = 部门
orders.ordersList.window.mainTab.orders.column.technologyNumber = 工艺编号
orders.ordersList.window.mainTab.orders.column.state = 状态

orders.orderDetails.window.ribbon.orderDetailsActions = Actions
orders.orderDetails.window.ribbon.orderDetailsActions.refresh = Refresh
orders.orderDetails.window.ribbon.export = 打印
orders.orderDetails.window.ribbon.export.print = 订单
orders.orderDetails.window.ribbon.status.activateOrder = 开始
orders.orderDetails.window.ribbon.status.acceptOrder = 批准
orders.orderDetails.window.ribbon.status.finishOrder = 结束
orders.orderDetails.window.ribbon.status.restartOrder = 重新开始
orders.orderDetails.window.ribbon.status.declineOrder = 拒绝
orders.orderDetails.window.ribbon.status.abandonOrder = 放弃
orders.orderDetails.window.ribbon.status.interruptOrder = 暂停
orders.orderDetails.window.ribbon.status = 状态

orders.orderDetails.window.mainTab.order.headerNew = 新订单:
orders.orderDetails.window.mainTab.order.headerEdit = 订单:
orders.orderDetails.window.mainTab.order.confirmDeleteMessage = 是否删除订单？
orders.orderDetails.window.mainTab.orders.confirmDeleteMessage = 非删除订单？
orders.orderDetails.window.mainTab.order.saveMessage = 订单已保存到数据库。
orders.orderDetails.window.mainTab.order.deleteMessage = 订单已从数据库除移。
orders.orderDetails.window.mainTab.order.deleteFailedMessage = 订单未被从数据库除移。
orders.orderDetails.window.mainTab.order.name.description = 选定产品后，如未填写此项，系统将自动填写。
orders.orderDetails.window.mainTab.order.technology.lookup.window.grid.header = 选择工艺
orders.orderDetails.window.mainTab.order.product.lookup.window.grid.header = 选择产品
orders.orderDetails.window.mainTab.order.company.lookup.window.grid.header = 选择客户
orders.orderDetails.window.mainTab.order.unit.label =
orders.orderDetails.window.mainTab.order.unitForAdditionalUnit.label =
orders.orderDetails.window.mainTab.order.unitForDone.label =

orders.orderDetails.window.mainTab.order.dateFrom.description = 批准订单时需填写此项。
orders.orderDetails.window.mainTab.order.dateTo.description = 批准订单时需填写此项

orders.orderDetails.window.mainTab.order.doneQuantity.description = 如生产追溯类型为无或基础型，此项可编辑。否则将自动显示为追溯机制所提供的出产数量。

orders.orderDetails.window.mainTab.order.productionLine.lookup.window.grid.header = 生产线

orders.orderDetails.window.detailsTab.tabLabel = 日期

orders.orderDetails.window.history.tabLabel = 历史
orders.orderDetails.window.history.loggings.header = 订单状态修改

orders.orderDetails.window.detailsTab.correctedDateFrom.label = 已校正
orders.orderDetails.window.detailsTab.dateFrom.label = 计划
orders.orderDetails.window.detailsTab.dateTo.label  = 计划
orders.orderDetails.window.detailsTab.effectiveDateFrom.label = 实际
orders.orderDetails.window.detailsTab.effectiveDateTo.label = 实际
orders.orderDetails.window.detailsTab.reasonTypeCorrectionDateFrom.label = 类型
orders.orderDetails.window.detailsTab.commentReasonTypeCorrectionDateFrom.label = 内容
orders.orderDetails.window.detailsTab.correctedDateTo.label = 已校正
orders.orderDetails.window.detailsTab.reasonTypeCorrectionDateTo.label = 类型
orders.orderDetails.window.detailsTab.commentReasonTypeCorrectionDateTo.label = 说明

orders.orderDetails.window.detailsTab.reasonTypesCorrectionDateFromLabel.label = 类型
orders.orderDetails.window.detailsTab.reasonTypesCorrectionDateToLabel.label = 类型
orders.orderDetails.window.detailsTab.reasonTypesDeviationsOfEffectiveStartLabel.label = 类型
orders.orderDetails.window.detailsTab.reasonTypesDeviationsOfEffectiveEndLabel.label = 类型

orders.orderDetails.window.detailsTab.plannedDateFrom.description = 批准订单时需填写此项。
orders.orderDetails.window.detailsTab.plannedDateTo.description = 批准订单时需填写此项。

orders.ordersImport.window.ribbon.import = Import data
orders.ordersImport.window.ribbon.import.processImportFile = Import
orders.ordersImport.window.ribbon.import.downloadImportSchema = Download schema
orders.ordersImport.window.ribbon.import.redirectToLogs = Show logs

orders.ordersImport.window.mainTab.import.importFile.label = File to import
orders.ordersImport.window.mainTab.import.importFile.description = Please select a file, that will be used to create orders. The format of the file must be exactly the same as in attached schema. Please use a button on ribbon in order to download it. Fill it with data and upload it to the system.
orders.ordersImport.window.mainTab.import.shouldUpdate.label = Update existing data?

startDatesLabel = 开始
endDatesLabel = 结束日期
causeOfPlannedDateFromCorrectionLabel = 计划开始日期校正原因
causeOfPlannedDateToCorrectionLabel = 校正计划结束日期的原因
causeDeviationsOfEffectiveStartLabel = 时间开始日期延迟原因
causeDeviationsOfEffectiveEndLabel = 实际结束日期误差原因

orders.orderDetails.window.detailsTab.reasonTypeDeviationsOfEffectiveStart.label = 类型
orders.orderDetails.window.detailsTab.commentReasonTypeDeviationsOfEffectiveStart.label = 说明

orders.orderDetails.window.detailsTab.reasonTypeDeviationsOfEffectiveEnd.label = 类型
orders.orderDetails.window.detailsTab.commentReasonTypeDeviationsOfEffectiveEnd.label = 说明

basic.reasonTypeOfChangingOrderState.dictionary = 生产计划延迟原因
orders.reasonTypeOfChangingOrderState.dictionary = 生产计划延迟原因

orders.orderStateChangeDetails.window.mainTab.logging.headerEdit = 状态变化

orders.orderStateChangeDetails.window.mainTab.logging.reasonTypesLabel.label = 类型

orders.orderStateChangeReasonDialog.window.ribbon.actions.continue = 执行
orders.orderStateChangeReasonDialog.window.ribbon.actions.cancel = 取消

orders.orderStateChangeReasonDialog.window.mainTab.logging.reasonTypesLabel.label = 类型

orders.orderDetails.window.ribbon.orderParameters = 工艺
orders.orderDetails.window.ribbon.orderParameters.orderParameters = 参数

orders.orderDetails.window.productQuantityTab.tabLabel = 产品数量

reasonForCorrectionLabel = 校正原因
commissionedAmountLabel = 合同数量
orders.orderDetails.window.productQuantityTab.commissionedPlannedQuantity.label = 计划
orders.order.commissionedPlannedQuantity.label = 计划
orders.orderDetails.window.productQuantityTab.commissionedCorrectedQuantity.label = 已校正
orders.order.commissionedCorrectedQuantity.label = 已校正数量
orders.orderDetails.window.productQuantityTab.remainingAmountOfProductToProduce.label = 待生产数量
orders.order.remainingAmountOfProductToProduce.label = 待生产数量
orders.orderDetails.window.productQuantityTab.amountOfProductProduced.label = 已生产数量
orders.order.amountOfProductProduced.label = 已生成产品数量
orders.order.wastesQuantity.label = 报废数量
orders.orderDetails.window.productQuantityTab.commentReasonTypeDeviationsQuantity.label = 说明
orders.order.commentReasonTypeDeviationsQuantity.label = 说明
orders.orderDetails.window.productQuantityTab.typeOfCorrectionCauses.innerForm_@innerFormId.reasonType.label = 类型
orders.typeOfCorrectionCauses.reasonType.label = 类型
orders.orderDetails.window.productQuantityTab.reasonTypesCorrectionProductQuantityFromLabel.label = 类型
orders.ordersParameters.window.mainTab.ordersParameters.orderValuesLockLabel = 锁定修改功能
orders.ordersParameters.window.mainTab.ordersParameters.allowQuantityChangeInAcceptedOrder.label = 批准生产订单的需求数量。
basic.parameter.allowQuantityChangeInAcceptedOrder.label = 锁定已要求生产数量的批准状态。
orders.ordersParameters.window.deviationsDocumentationTab.reasonNeededWhenCorrectingTheRequestedVolume.label = 校正需求数量
basic.parameter.reasonNeededWhenCorrectingTheRequestedVolume.label =  校正需求数量

orders.orderDetails.window.mainTab.order.orderType.label = 订单类型
orders.orderDetails.window.mainTab.order.predefinedTechnologyLabel = 预设工艺
orders.orderDetails.window.mainTab.order.orderType.description = 编辑一个工艺标准或者选择工具栏“工艺”按钮创建工艺。
orders.orderDetails.window.ribbon.orderCopyOfTechnology = 工艺
orders.orderDetails.window.ribbon.orderCopyOfTechnology.orderCopyOfTechnology = 工艺

orders.copyOfTechnologyDetails.window.ribbon.technology = 工序
orders.copyOfTechnologyDetails.window.ribbon.technology.checkTechnology = 检查工艺
orders.copyOfTechnologyDetails.window.ribbon.technology.clearAndLoadPatternTechnology = 清除并重新载入<br/>基础工艺
orders.copyOfTechnologyDetails.window.ribbon.costsNorms = 成本标准
orders.copyOfTechnologyDetails.window.ribbon.costsNorms.hourlyCostNorms = 小时成本标准
orders.copyOfTechnologyDetails.window.ribbon.technology.clearTechnology = 清除

orders.copyOfTechnologyDetails.window.mainTab.technology.headerEdit = 产品工艺:
orders.copyOfTechnologyDetails.window.mainTab.technology.technologyPrototype.label = 根据
orders.copyOfTechnologyDetails.window.mainTab.technology.technologyPrototype.focus = 根据

orders.copyOfTechnologyDetails.window.mainTab.technology.technologyGroup.lookup.window.grid.header = 选择工艺组

orders.copyOfTechnologyDetails.window.genealogyTab.tabLabel = 追溯

orders.copyOfTechnologyDetails.window.ribbon.status = 状态

orders.copyOfTechnologyDetails.window.treeTab.tabLabel = 工艺树
orders.copyOfTechnologyDetails.window.treeTab.description.label = 从加入一道工序开始生产最终工艺产品

orders.copyOfTechnologyDetails.window.treeTab.technologyTree.customActionConfirm = 是否从工艺树中除移此项工艺？
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.customActionTitle = 从中除移

orders.copyOfTechnologyDetails.window.treeTab.technologyTree.label = 工序
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.header = 工序
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.emptyRoot = 无工序
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.newButton.operation = 增加一道工序
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.newButton.referenceTechnology = 复制工艺
orders.copyOfTechnologyDetails.window.treeTab.technologyTree.moveModeInfoContent  = 对工艺树进行修改时，无法对输入/输入产品进行编辑。只有当保存或者取消修改后，方能进行编辑。

orders.copyOfTechnologyDetails.window.treeTab.inProducts.header = 输入产品
orders.copyOfTechnologyDetails.window.treeTab.inProducts.column.number = 编号
orders.copyOfTechnologyDetails.window.treeTab.inProducts.column.name = 名称
orders.copyOfTechnologyDetails.window.treeTab.inProducts.column.unit = 单位

orders.copyOfTechnologyDetails.window.treeTab.outProducts.header = 输出产品
orders.copyOfTechnologyDetails.window.treeTab.outProducts.column.number = 编号
orders.copyOfTechnologyDetails.window.treeTab.outProducts.column.name = 名称
orders.copyOfTechnologyDetails.window.treeTab.outProducts.column.unit = 单位

orders.copyOfTechnologyDetails.window.history.tabLabel = 历史
orders.copyOfTechnologyDetails.window.history.loggings.header = 工艺状态更改
orders.copyOfTechnologyDetails.window.history.loggings.column.dateAndTime = 日期和时间
orders.copyOfTechnologyDetails.window.history.loggings.column.previousState = 原先状态
orders.copyOfTechnologyDetails.window.history.loggings.column.currentState = 当前状态
orders.copyOfTechnologyDetails.window.history.loggings.column.shift = 班次
orders.copyOfTechnologyDetails.window.history.loggings.column.worker = 工人

orders.order.technologyPrototype.label = 已选定
technologies.technology.technologyPrototype.label = 已选定

orders.order.technologyPrototype.label.focus = 根据
technologies.technology.technologyPrototype.label.focus = 根据

orders.copyOfTechnologyDetails.window.minimalAffordableQuantity.tabLabel = 最小数量
qcadooView.tabs.minimalAffordableQuantity.tabLabel = 最小数量
orders.copyOfTechnologyDetails.window.minimalAffordableQuantity.minimalQuantity.label = 最小负荷数量
technologies.technology.minimalQuantity.label = 最小负荷示例
orders.copyOfTechnologyDetails.window.advancedGenealogyForOrdersTab.tabLabel = 订单追溯
qcadooView.tabs.advancedGenealogyForOrdersTab.tabLabel = 订单追溯
orders.copyOfTechnologyDetails.window.goodFoodTab.tabLabel = 附加
qcadooView.tabs.goodFoodTab.tabLabel = 附加
orders.copyOfTechnologyDetails.window.ribbon.status.checkTechnology = 验证
qcadooView.ribbon.status.checkTechnology = 生效

orders.schedulesList.window.mainTab.schedules.header = Schedules:
orders.scheduleDetails.window.ribbon.status.approveSchedule = Approve
orders.scheduleDetails.window.ribbon.status.rejectSchedule = Reject
orders.scheduleDetails.window.ribbon.status = State
orders.scheduleDetails.window.mainTab.schedule.headerNew = New schedule:
orders.scheduleDetails.window.mainTab.schedule.headerEdit =  Plan for workstation and employee:
orders.scheduleDetails.window.inputDataTab.tabLabel = Input data
orders.scheduleDetails.window.inputDataTab.orders.header = Orders:
orders.scheduleDetails.window.inputDataTab.ordersLookup.lookup.window.grid.header = Orders:
orders.scheduleDetails.window.inputDataTab.ordersLookup.lookup.window.grid.column.productNumber = Product nr
orders.scheduleDetails.window.inputDataTab.ordersLookup.lookup.window.grid.column.productName = Product name
orders.scheduleDetails.window.ribbon.status.approveSchedule.confirm = Approve schedule?
orders.scheduleDetails.window.ribbon.status.rejectSchedule.confirm = Reject schedule?

orders.schedulePositionDetails.window.mainTab.schedulePosition.headerEdit = Plan edit:
orders.schedulePositionDetails.window.mainTab.schedulePosition.workstation.lookup.window.grid.header = Workstations
orders.schedulePositionDetails.window.mainTab.schedulePosition.staff.lookup.window.grid.header = Workers

orders.scheduleDetails.window.historyTab.tabLabel = History
orders.scheduleDetails.window.historyTab.stateChanges.header = History

orders.operationalTasksList.window.mainTab.operationalTasksList.header = 工序任务
orders.operationalTasksList.window.mainTab.form.operationalTasksList.header = 工序任务
orders.operationalTasksList.window.mainTab.form.headerNew = Operational tasks
orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.productionLineNumber = Line

orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.headerNew = 工序任务
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.headerEdit = 工序任务:

orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.staff.lookup.window.grid.header = Workers
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.productionLine.lookup.window.grid.header = 生产线
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.workstation.lookup.window.grid.header = Work stations

orders.operationalTaskDetails.window.historyTab.tabLabel = History
orders.operationalTaskDetails.window.historyTab.stateChanges.header = History
orders.operationalTaskDetails.window.historyTab.stateChanges.column.dateAndTime = Date
orders.operationalTaskDetails.window.historyTab.stateChanges.column.sourceState = Previous state
orders.operationalTaskDetails.window.historyTab.stateChanges.column.targetState = Current state
orders.operationalTaskDetails.window.historyTab.stateChanges.column.shiftName = Shift
orders.operationalTaskDetails.window.historyTab.stateChanges.column.worker = Worker
orders.operationalTaskDetails.window.historyTab.stateChanges.column.comment = Comment

orders.operationalTasksList.window.mainTab.operationalTasksList.column.state = State


### REPORT

orders.order.report.order = 生产订单:
orders.order.report.listOfOrdersReport = 生产订单清单
orders.order.report.date.label = 计划日期
orders.order.report.dateFrom.label = 结束日期
orders.order.report.dateTo.label = 开始日期
orders.order.report.effectiveDateFrom.label = 开始
orders.order.report.effectiveDateTo.label = 结束
orders.order.report.productQuantity.label = 产品数量
orders.order.report.plannedQuantity.label = 计划
orders.order.report.doneQuantity.label = 完成数量
orders.order.report.technology.label = 工艺
orders.order.report.technology.own = 自带工艺
orders.order.report.technology.pattern = 工艺
orders.order.report.technologyName.label = 名称
orders.order.report.technologyNumber.label = 编号
orders.order.report.technologyPrototype.label = 根据工艺
orders.order.report.technologyPrototypeName.label = 名称
orders.order.report.technologyPrototypeNumber.label = 编号
orders.order.report.masterOrder.label = 主订单
orders.order.report.masterOrderName.label = 名称
orders.order.report.masterOrderNumber.label = 编号
orders.order.report.number.label = 编号
orders.order.report.name.label = 名称
orders.order.report.state.label = 状态
orders.order.report.product.label = 产品
orders.order.report.plannedDateFrom.label = 计划日期起始于
orders.order.report.plannedDateTo.label = 计划日期结束语
orders.order.report.fileName = 订单报告_{0}


### INFO

orders.orders.ribbon.message.someStateIsIncorrectForDelete = 当订单有除草稿或者已取消外的其他状态，订单无法删除。

orders.orders.ribbon.message.someStateIsDone = 至少一份订单已完成。
orders.orders.ribbon.message.ordersWithDifferentStatesSelected = 所选订单有不同状态

orders.ribbon.message.recordAlreadyGenerated = 报告已生成。
orders.ribbon.message.selectedRecordAlreadyGenerated = 至少有一份所选报告已生成。
orders.ribbon.message.selectedRecordCannotBeDeleted = 至少有一份所选报告已生成，且报告中至少有一个生产订单已关闭。
orders.ribbon.message.recordNotGenerated = 报告未生成。
orders.ribbon.message.noOrders = 无订单
orders.ribbon.message.existClosedOrder = 清单中的订单已关闭。
orders.ribbon.message.mustChangeTechnologyState = 只有在订单工艺被批准或者检查后，此项功能才能使用。可在工艺详情中修改其状态。
orders.ribbon.message.mustAcceptOrder = To use this functionality, the order must be accepted.

orders.validate.global.error.default = 只能有一个默认工艺
orders.validate.global.error.orderMustHaveTechnology = {0}: 未有指定工艺的订单无法再报告中使用。
orders.validate.global.error.orderTechnologyMustHaveOperation = 如订单工艺未指定工序，则订单不能在报告中使用。
orders.validate.global.error.datesOrder = 结束日期不能早于开始日期。
orders.validate.global.error.datesOrder.overdue = 在开始延期订单前请校正日期。
orders.validate.global.error.plannedQuantityError = 选定产品需给定计划数量。
orders.validate.global.error.technologyError = 选定产品需制定工业。
orders.validate.global.error.substituteComponentDuplicated = 已复制代用零件。
orders.validate.technology.error.wrongState.checked = 选定工艺无“已审核”状态。
orders.validate.technology.error.wrongState.accepted = 选定工艺无“已批准”状态。
orders.validate.global.error.deadline = 结束日期晚于截止日期。
orders.validate.global.error.deadlineBeforeStartDate = 开始日期晚于截止日期。
orders.validate.global.error.effectiveDateTo = 有效中指日期不能早于有效起始日期。
orders.validate.global.error.endTime = Ending can't be earlier than the beginning.
orders.validate.global.error.operationalTasks.productChange = The product cannot be changed when the order has related operational tasks.
orders.validate.global.error.operationalTasks.technologyChange = You cannot change the technology when the job has related operational tasks.

orders.order.technology.removed = 工艺已从下述订单除移: {0}，

orders.order.fieldRequired.dateFrom = 需填写起始日期
orders.order.fieldRequired.dateTo = 需填写数据
orders.order.fieldRequired.deadline = 需填写截止日期

orders.order.orderStates.fieldRequired.doneQuantity = 需填写完成数量
orders.order.orderStates.fieldRequired.dateFrom = 需填写起始日期
orders.order.orderStates.fieldRequired.dateTo = 需填写数据
orders.order.orderStates.fieldRequireddeadline = 需给定填写日期
orders.order.orderStates.fieldRequired.product = 需填写产品
rders.order.orderStates.fieldRequired.company = 需填写客户
orders.order.orderStates.fieldRequired.plannedQuantity = 需填写计划数量
orders.order.orderStates.fieldRequired.technology = 需填写工艺
orders.order.orderStates.fieldRequired.defaultTechnology = 需填写默认工艺
orders.order.orderStates.fieldRequired.name = 需填写名称
orders.order.orderStates.fieldRequired.number = 需填写编号
orders.order.orderStates.fieldRequired = 需填写此单元格
orders.order.orderStates.doneQuantityMustBeGreaterThanZero = A started production order without produced products cannot be completed. If you want to cancel the order, set it to Abandoned.

orders.order.plannedDateToShouldLaterThanDeadline = 计划完成日期晚于截止日期

orders.order.stateChange.canceledByWorker = 工艺已取消状态更改请求。

orders.order.stateChange.missingStartCorrectionReason = 须填写订单开始日期校正原因。
orders.order.stateChange.missingEndCorrectionReason = 校正计划结束日期的原因.

orders.order.stateChange.additionalInfo.endTooEarly = 早于截至日期，于 {0}
orders.order.stateChange.additionalInfo.endTooLate = 晚于截止日期，于 {0}
orders.order.stateChange.additionalInfo.startTooEarly = 早于截至日期，于 {0}
orders.order.stateChange.additionalInfo.startTooLate = 晚于截止日期，于 {0}

orders.order.correctingQuantity.missingTypeOfCorrectionCauses = 需填写订单数量校正愿原因。

order.technology.patternTechnology.not.set = 选择模式工艺后，方可进行编辑。
order.technology.patternTechnology.productGroupTechnology.set = The technology cannot be edited, product group technology selected.

orders.copyOfTechnologyDetails.window.mainTab.technology.technologyPrototype.lookup.window.grid.header = 选择工艺
orders.copyOfTechnology.reloadFromPattern.failure.validationError = 由于验证错误，中断工艺。
orders.copyOfTechnology.reloadFromPattern.failure.deletePrevented = 由于老工艺无法删除，中断工艺。

orders.validate.global.error.technologyHasError = 工艺选择错误

qcadooModel.dictionaryItem.description.error.hexColorIsIncorrect = 给定描述包含HEX格式的错误颜色。

orders.schedulePosition.message.linkedOperationStartTimeIncorrect = The operation starts earlier than the previous operations end.

orders.schedule.positions.isEmpty = Schedule has not positions.
orders.schedule.orders.wrongState = Schedule has orders with wrong state.
orders.schedule.orders.wrongTypeOfProductionRecording = Schedule has orders with wrong type of production recording.


### MODEL EXTENSIONS

basic.log.logType.value.orderImport = Orders import

basic.parameter.defaultProductionLine.label = 默认生产线
basic.parameter.defaultProductionLine.label.focus = 选择生产线

basic.parameter.reasonNeededWhenCorrectingDateFrom.label = 开始日期
basic.parameter.reasonNeededWhenCorrectingDateTo.label = 结束日期

basic.parameter.reasonNeededWhenChangingStateToDeclined.label = 偏差
basic.parameter.reasonNeededWhenChangingStateToInterrupted.label = 暂停
basic.parameter.reasonNeededWhenChangingStateToAbandoned.label = 放弃

basic.parameter.reasonNeededWhenDelayedEffectiveDateFrom.label = 有效起始日期推迟
asic.parameter.reasonNeededWhenEarlierEffectiveDateFrom.label = 有效起始日期提前
basic.parameter.reasonNeededWhenDelayedEffectiveDateTo.label = 有效截止日期推迟
basic.parameter.reasonNeededWhenEarlierEffectiveDateTo.label = 有效截止日期提前

basic.parameter.delayedEffectiveDateFromTime.label = 于时间
basic.parameter.earlierEffectiveDateFromTime.label = 于时间
basic.parameter.delayedEffectiveDateToTime.label = 于时间
basic.parameter.earlierEffectiveDateToTime.label = 于时间

orders.technology.own = 自带
orders.technology.pattern = 模板

orders.orderDto.number.label = 编号
orders.orderDto.name.label = 名称
orders.orderDto.state.label = 状态

orders.orderDto.state.value.01pending = 待定
orders.orderDto.state.value.02accepted = 已批准
orders.orderDto.state.value.03inProgress = 进行中
orders.orderDto.state.value.04completed = 已完成
orders.orderDto.state.value.05declined = 已拒绝
orders.orderDto.state.value.06interrupted = 已暂停
orders.orderDto.state.value.07abandoned = 已放弃


### VIEW EXTENSIONS

orders.planningParameters.window.ribbon.parameters = 参数
orders.planningParameters.window.ribbon.parameters.ordersParameters = 订单

orders.ordersParameters.window.ribbon.dictionary = 许可
orders.ordersParameters.window.ribbon.dictionary.deviationsDictionary = 偏差信息库

orders.ordersParameters.window.mainTab.tabLabel = 主要

orders.ordersParameters.window.mainTab.ordersParameters.headerEdit = 订单参数
orders.ordersParameters.window.mainTab.ordersParameters.defaultProductionLine.lookup.window.grid.header = 生产线

orders.ordersParameters.window.deviationsDocumentationTab.tabLabel = 偏差文件

orders.ordersParameters.window.deviationsDocumentationTab.deviationsDocumentation.label = 此处可以规定合适需要给出更改原因。
orders.ordersParameters.window.deviationsDocumentationTab.correctionOfDate = 计划日期校正
orders.ordersParameters.window.deviationsDocumentationTab.deviationsFromPlannedAndCorretedDates = 计划或者已校正日期偏差

orders.ordersParameters.window.orderCategoryColorsTab.tabLabel = 订单类型


### VIEW - RIBBON EXTENSIONS

basic.productDetails.window.ribbon.orders = 订单
basic.productDetails.window.ribbon.orders.showOrdersWithProductMain = 该产品<br/>所有信息
basic.productDetails.window.ribbon.orders.showOrdersWithProductPlanned = 显示该产品d<br/>所有计划


### ERROR

orders.order.commentReasonTypeCorrectionDateTo.isRequired = 由参数定义是否需要提供日期校正原因。
orders.order.commentReasonTypeCorrectionDateFrom.isRequired = 由参数定义是否需要提供日期校正原因。

orders.order.reasonNeededWhenDelayedEffectiveDateFrom.isRequired = 有效起始日期推迟于 {0}。 原因需求已在参数中定义。
orders.order.reasonNeededWhenEarlierEffectiveDateFrom.isRequired = 有效起始日期提前于 {0}。 原因需求已在参数中定义。
orders.order.reasonNeededWhenDelayedEffectiveDateTo.isRequired = 有效截止日期推迟于 {0}。 原因需求已在参数中定义。
orders.order.reasonNeededWhenEarlierEffectiveDateTo.isRequired = 有效截止日期提前于 {0}。原因需求已在参数中定义。

orders.technology.hasOrdersAsPrototype = 工艺 {0} 无法删除 - 此为外部订单的原型工艺。
orders.order.address.label=地址
orders.order.address.label.focus= 选择地址
orders.orderDetails.window.mainTab.order.address.lookup.window.grid.header= 地址
orders.orderDetails.window.mainTab.order.orderCategory.description= 使用此工具箱编写组合或者附加订单。种类建立在信息库的基础上。 除外之外，可在参数中指定种类颜色，并在订单清单打印是标记相应的颜色。
orders.order.ribbon.message.stateIsDone=订单已完成
basic.parameter.enablePkt.label=可从生产定的中复制工艺

basic.parameter.fillOrderDescriptionBasedOnTechnologyDescription.label = 根据工艺描述填写订单描述
basic.parameter.canChangeProdLineForAcceptedOrders.label = Allow the production line to be changed in the accepted order
orders.ordersParameters.window.mainTab.ordersParameters.fillOrderDescriptionBasedOnTechnologyDescription.description = 如果生产订单接受的描述是基于工艺描述，需选择此参数。工作描述会在工作计划中展现给员工
basic.parameter.enablePkt.description = Parameter only visible to user with superadmin role. Enable parameter if each order is to create a PKT (technology for the order)
orders.orderPlanningListDto.divisionNumber.label = Division
orders.orderPlanningListDto.productionLineNumber.label = Production line
orders.orderPlanningListDto.finishDate.label = Finish date
orders.orderPlanningListDto.startDate.label = Start date
orders.orderPlanningListDto.number.label = Number
basic.parameter.createSetElementsOnAccept.label = Create the components of the set while accepting the order
orders.ordersParameters.window.mainTab.ordersParameters.setEffectiveDateFromOnInProgress.description = Set effective date from at starting order.
basic.parameter.setEffectiveDateFromOnInProgress.label = Set effective date from
orders.ordersParameters.window.mainTab.ordersParameters.setEffectiveDateToOnCompleted.description = Set effective date to on completing order.
basic.parameter.setEffectiveDateToOnCompleted.label = Set effective date to
orders.ordersParameters.window.mainTab.ordersParameters.flagPercentageOfExecutionWithColor.description = Select the parameter if you want to designate data in the column% completed in planning> order planning> green (100% execution), red (0% execution) and yellow (execution between 0 and 100%)
basic.parameter.flagPercentageOfExecutionWithColor.label = Flag the percentage of execution with color
orders.ordersParameters.window.mainTab.ordersParameters.copyNotesFromMasterOrderPosition.description = Select if you want the description of the sales order to move to the description of the created production order.
basic.parameter.copyNotesFromMasterOrderPosition.label = Copy notes from the position of the sales order
basic.parameter.realizationFromStock.label = Realization from stock
orders.ordersParameters.window.mainTab.ordersParameters.realizationFromStock.description = Select the parameter if the ordered items can be delivered from the available stock. When creating production orders, the program will inform you what to take from the warehouse without having to order production

basic.parameter.alwaysOrderItemsWithPersonalization.label = Always order items with personalization
orders.ordersParameters.window.mainTab.ordersParameters.alwaysOrderItemsWithPersonalization.description = Select a parameter if you enter personalization in the Reminder of the parent order item, which makes it necessary to produce a special version of the product for the client. Then, we will always create a production order to the item with notes
orders.ordersParameters.window.mainTab.ordersParameters.realizationLocations.header = Locations
orders.ordersParameters.window.mainTab.ordersParameters.locationsLookup.lookup.window.grid.header=Locations
orders.ordersParameters.window.mainTab.ordersParameters.realizationLocations.error.empty = You need to define warehouses for execution from stock.
orders.ordersList.changeState.validationErrors = State change for order {0} failed because of validation errors.
orders.changeDatesHelper.error.validationErrors = Cannot change dates because of validation errors in orders: {0}
orders.changeDatesHelper.error.datesMissing = Missing start or finish date.
orders.changeDatesHelper.commentReasonTypeCorrectionDateTo.label = Comment
orders.changeDatesDetails.window.mainTab.order.reasonTypesCorrectionDateToLabel.label = Type
orders.changeDatesHelper.dateTo.label = New finish date
orders.changeDatesDetails.window.mainTab.order.dateToCorrectionLabel = Finish date
orders.changeDatesHelper.commentReasonTypeCorrectionDateFrom.label = Comment
orders.changeDatesDetails.window.mainTab.order.reasonTypesCorrectionDateFromLabel.label = Type
orders.changeDatesHelper.dateFrom.label = New start date
orders.changeDatesDetails.window.mainTab.order.dateFromCorrectionLabel = Start date
orders.changeDatesDetails.window.mainTab.order.headerNew = Change dates in orders
orders.ordersPlanningList.window.ribbon.dates.changeDates = Change dates in orders
orders.ordersPlanningList.window.ribbon.dates = Dates
orders.changeDatesHelper.info.changeOrders = The dates in the following orders have been changed: {0}

orders.orderDetails.window.mainTab.order.division.label = Division
orders.order.division.label = Division
orders.order.division.label.focus = Select division
orders.orderDetails.window.mainTab.order.division.lookup.window.grid.header = Divisions
basic.productsList.window.ribbon.orders = Orders
orders.ordersGenerationFromProducts.ribbon.message.generateOrders =Production orders will be created for each of the selected products

orders.operationalTask.error.finishDateIsEarlier = 结束日期不能早于开始日期。
orders.operationalTask.error.inappropriateStartDateNext = The start date cannot be later than the start date of the next task.
orders.operationalTask.error.inappropriateStartDatePrevious = The start date cannot be earlier than the start date of the previous task.
orders.operationalTask.error.inappropriateFinishDateNext = The end date cannot be later than the end date of the next task.
orders.operationalTask.error.inappropriateFinishDatePrevious = The end date cannot be earlier than the end date of the previous task.
orders.operationalTask.error.nameIsBlank = 此类任务名称不能空白。
orders.operationalTask.error.startOperationalTask = Error when start operational task.
orders.operationalTask.error.rejectOperationalTask = Error when reject operational task.
orders.operationalTask.error.finishOperationalTask = Error when finish operational task.
orders.operationalTask.error.notUnique = An operational task has already been defined for the operation.

basic.parameter.inputProductsRequiredForType.value.02startOperationalTask = in operational task start day

orders.order.inputProductsRequiredForType.value.02startOperationalTask = in operational task start day

orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.orderNumber = No. order
orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.productUnit = Unit
orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.plannedQuantity = Quantity
orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.usedQuantity = Used qnt.
orders.operationalTasksList.window.mainTab.form.operationalTasksList.column.remainingQuantity = Rem qnt.

orders.operationalTaskDetails.window.orderTab.tabLabel = Operation in order

orders.operationalTaskDetails.window.orderTab.order.lookup.window.grid.header = Orders

orders.operationalTaskDetails.window.orderTab.technologyOperationComponent.lookup.window.grid.header = Operations
orders.operationalTaskDetails.window.orderTab.technologyOperationComponent.lookup.window.grid.column.lookupCode = Operation level
orders.operationalTaskDetails.window.orderTab.technologyOperationComponent.lookup.window.grid.column.name = Operation name

orders.operationalTaskDetails.window.orderTab.product.lookup.window.grid.header = Products

orders.orderDetails.window.ribbon.operationalTasks = Operational tasks
orders.orderDetails.window.ribbon.operationalTasks.showOperationalTasks = Show operational<br/>tasks

orders.planningParameters.window.operationalTasksTab.tabLabel = Operational tasks
orders.planningParameters.window.operationalTasksTab.planningParameters.headerEdit = Planning parameters
orders.planningParameters.window.operationalTasksTab.planningParameters.operTaskFlagPercentExecutionWithColor.label = Flag the percentage of execution
orders.planningParameters.window.operationalTasksTab.planningParameters.operTaskFlagPercentExecutionWithColor.description = Select the parameter if you want to designate data in the planning> operational tasks in%: green (100% execution), red (0% execution) and yellow (execution between 0 and 100%)
orders.operationalTaskDetails.window.orderTab.doneInPercentage.label = Done
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.plannedQuantity.label = Planned
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.usedQuantity.label = Used
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.doneInPercentage.label = Done
orders.schedule.operationalTasks.wrongState = Schedule has orders: {0} with operational tasks in wrong state.
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.order.lookup.window.grid.header = Orders
orders.operationalTaskDetails.window.mainTab.operationalTasksDetails.technologyOperationComponent.lookup.window.grid.header=Operations

orders.ordersPlanningList.window.ribbon.categories.setCategory = Set <br/> order category
orders.orders.ribbon.message.setCategory = The function sets the indicated category for selected orders.
orders.ordersPlanningList.window.ribbon.categories=Categories
orders.setCategory.window.mainTab.form.headerNew = Enter the order category
orders.setCategory.window.mainTab.form.orderCategory.label = Order category
orders.setCategory.window.ribbon.actions.setCategory = Perform
orders.order.setCategory.success = The category for the selected orders has been changed.

orders.ordersParameters.window.mainTab.ordersParameters.createCollectiveOrders.label = Collective orders created <br/> from the parent order
orders.ordersParameters.window.mainTab.ordersParameters.createCollectiveOrders.description = Select the parameter if you want the function Create multiple production orders from the level of parent orders to create as many production orders as products in selected items. The ordered quantities will be added together and commissioned for production.

orders.operationalTasksList.window.mainTab.operationalTasksList.filter.open=open
orders.operationalTasksList.window.mainTab.operationalTasksList.filter.closed=closed

orders.orderDto.plannedQuantity.label = Planned quantity

orders.error.inappropriateWorkstationForOperation = You cannot select this workstation for this task.

orders.orderDetails.window.ribbon.operationalTasks.generateOperationalTasks = Generate<br/>operational tasks
orders.ribbon.message.canNotGenerateOperationalTasks = Function available for the order accepted with registration for each operation. Creates an operational task for each operation, without assigning them to the workstation and employee.
orders.ordersDetails.info.operationalTasksCreated = Operational tasks created

orders.ordersParameters.window.mainTab.ordersParameters.creatingOrdersForMasterOrder = Creating orders for a sales order
orders.ordersParameters.window.mainTab.ordersParameters.adviseStartDateOfTheOrder.label = Suggest the start date of the order when creating the order
orders.ordersParameters.window.mainTab.ordersParameters.adviseStartDateOfTheOrder.description = Select if you want us to prompt you the start date when creating the order. Please indicate below what the source of this date should be.
orders.ordersParameters.window.mainTab.ordersParameters.orderStartDateBasedOn.label = Start date suggested based on
orders.ordersParameters.window.mainTab.ordersParameters.orderStartDateBasedOn.description = The parameter will be activated when you check the Suggest start date when creating order.
basic.parameter.orderStartDateBasedOn.value.01currentDate = current date
basic.parameter.orderStartDateBasedOn.value.02beginningFirstShiftNextDay = start of the first shift of the next day
basic.parameter.orderStartDateBasedOn.value.03endDateLastOrderOnTheLine = end date of the last order on the line

orders.orderAdditionalDetails.window.additionalTabs.tabLabel = Parameters
orders.orderAdditionalDetails.window.additionalTabs.form.headerEdit = Order parameters

orders.orderCreationService.created = Order created : {0}
